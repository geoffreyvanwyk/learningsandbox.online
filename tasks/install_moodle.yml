---
# This file is part of Learning Sandbox Online.
#
# Learning Sandbox Online is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Learning Sandbox Online is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Learning Sandbox Online. If not, see <https://www.gnu.org/licenses/>.

##
# Tasks for installing a particular version of Moodle.
#
# @copyright  2023 Geoffrey Bernardo van Wyk (https://geoffreyvanwyk.dev)
##

- name: Install Moodle {{ sandbox_item.version }}
  ansible.builtin.include_role:
    name: geoffreyvanwyk.moodle
  vars:
    moodle_deploy_version: "{{ sandbox_item.branch }}"
    moodle_deploy_destination: /var/www/html/moodle-{{ sandbox_item.version }}
    moodle_web_protocol: https
    moodle_web_domain: "{{ sandbox_domain }}"
    moodle_web_path: moodle-{{ sandbox_item.version }}
    moodle_cfg_dbname: moodle-{{ sandbox_item.version | replace(".", "") }}
    moodle_cfg_disableupdateautodeploy: true
    moodle_cfg_noemailever: true
    moodle_cfg_preventexecpath: true

- name: Set instance identifier for Moodle {{ sandbox_item.version }}
  ansible.builtin.set_fact:
    sandbox_moodle_instance: >-
      {{ sandbox_domain }}-moodle-{{ sandbox_item.version }}

- name: Set PHP version
  ansible.builtin.set_fact:
    sandbox_php_version: "{{
           '8.1' if (sandbox_item.branch == 'MOODLE_402_STABLE') or
                    (sandbox_item.branch == 'MOODLE_401_STABLE')
      else '8.0' if (sandbox_item.branch == 'MOODLE_400_STABLE') or
                    (sandbox_item.branch == 'MOODLE_311_STABLE')
      else '7.4' }}"

- name: Enable Moodle's maintenance mode {{ sandbox_item.version }}
  ansible.builtin.command:
    chdir: /var/www/html/moodle-{{ sandbox_item.version }}
    cmd: php{{ sandbox_php_version }} admin/cli/maintenance.php --enable
  changed_when: yes

- name: Does archive of moodledata exists for Moodle {{ sandbox_item.version }}?
  ansible.builtin.stat:
    path: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}.tar.gz
  register: moodledata_archive

- name: Prepare for reset of moodledata {{ sandbox_item.version }}
  when: not moodledata_archive.stat.exists
  become: yes
  block:
    - name: Rename moodledata as fresh {{ sandbox_item.version }}
      ansible.builtin.command:
        cmd: >
          mv /var/www/moodledata-{{ sandbox_moodle_instance }}
            /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}
        creates: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}

    - name: Archive fresh moodledata {{ sandbox_item.version }}
      community.general.archive:
        path: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}
        dest: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}.tar.gz
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: u=rw,g=r,o=r

    - name: Rename moodledata as current {{ sandbox_item.version }}
      ansible.builtin.command:
        cmd: >
          mv /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}
             /var/www/moodledata-current-{{ sandbox_moodle_instance }}
        creates: /var/www/moodledata-current-{{ sandbox_moodle_instance }}

    - name: Turn moodledata into link {{ sandbox_item.version }}
      ansible.builtin.file:
        src: /var/www/moodledata-current-{{ sandbox_moodle_instance }}
        dest: /var/www/moodledata-{{ sandbox_moodle_instance }}
        state: link

    - name: Extract fresh moodledata  {{ sandbox_item.version }}
      ansible.builtin.unarchive:
        remote_src: yes
        src: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}.tar.gz
        dest: /var/www

    - name: Set permissions for fresh moodledata {{ sandbox_item.version }}
      ansible.builtin.file:
        path: /var/www/moodledata-fresh-{{ sandbox_moodle_instance }}
        state: directory
        owner: "{{ ansible_user }}"
        group: www-data
        mode: u=rwX,g=rwX,o=rwX

- name: Prepare for reset of database {{ sandbox_item.version }}
  become: yes
  become_user: postgres
  block:
    - name: Copy fresh database {{ sandbox_item.version }}
      community.postgresql.postgresql_db:
        name: moodle-{{ sandbox_item.version | replace(".", "") }}-fresh
        state: present
        template: moodle-{{ sandbox_item.version | replace(".", "") }}

    - name: Copy next database {{ sandbox_item.version }}
      community.postgresql.postgresql_db:
        name: moodle-{{ sandbox_item.version | replace(".", "") }}-next
        state: present
        template: moodle-{{ sandbox_item.version | replace(".", "") }}

- name: Disable Moodle's maintenance mode {{ sandbox_item.version }}
  ansible.builtin.command:
    chdir: /var/www/html/moodle-{{ sandbox_item.version }}
    cmd: php{{ sandbox_php_version }} admin/cli/maintenance.php --disable
  changed_when: yes
